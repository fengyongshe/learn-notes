
#user  nobody;
worker_processes  2;
#worker_cpu_affinity 1000 0100 0010 0001;

#error_log  logs/error.log;
#error_log  logs/error.log error;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log  logs/error.log  debug;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;


	lua_code_cache on;
	lua_shared_dict worker_data1 100m;
	lua_shared_dict worker_data2 100m;
	lua_shared_dict worker_shared 2m;


	upstream nolua {
		server 127.0.0.1:8001;
		server 127.0.0.1:8002;
		server 127.0.0.1:8003;
		server 127.0.0.1:8004;
		server 127.0.0.1:8005;
	}
	upstream redis_server {
		#server 127.0.0.1:63790;
		server unix:/tmp/router_redis.sock;
		keepalive 2048 single;
	}

    server {
        listen 8080;

		location /router_control {
            set $enable_debug '1';
			lua_need_request_body on;
            allow 127.0.0.1;
            deny all;
			content_by_lua_file NGX_BASE_SRC_DIR/lua_file/router_control.lua;
		}

#        location /cjson_test {
#            allow 127.0.0.1;
#            deny all;
#            content_by_lua '
#                local cjson=require "cjson"
#                ngx.req.read_body()
#                local req_data = ngx.var.request_body
#                ngx.log(ngx.DEBUG, "req_data = ", req_data)
#                local req_table=cjson.decode(req_data)
#                ngx.log(ngx.DEBUG, "req_table size = ", #req_table)
#                for k in pairs(req_table) do 
#                    ngx.log(ngx.DEBUG, i, "=", req_table[i])
#                end
#            ';
#        }
#        
#        location /dict_get {
#			set_unescape_uri $key $arg_key;
#            allow 127.0.0.1;
#            deny all;
#            content_by_lua '
#                local worker_shared = ngx.shared.worker_shared
#                local valid_dataset = worker_shared:get("valid_dataset")
#                local worker_data = nil
#
#                if valid_dataset == "1" then
#                    wd = ngx.shared.worker_data1
#                elseif valid_dataset == "2" then
#                    wd = ngx.shared.worker_data2
#                else
#                    ngx.exit(502)
#                end
# 
#                ngx.say("result = ", wd:get(ngx.var.key)) 
#            ';
#        }
#
#        location /dump_keys {
#            allow 127.0.0.1;
#            deny all;
#            content_by_lua '
#                local cjson = require "cjson"
#
#                local worker_shared = ngx.shared.worker_shared
#                local valid_dataset = worker_shared:get("valid_dataset")
#                local worker_data = nil
#
#                if valid_dataset == "1" then
#                    wd = ngx.shared.worker_data1
#                elseif valid_dataset == "2" then
#                    wd = ngx.shared.worker_data2
#                else
#                    ngx.exit(502)
#                end
# 
#                ngx.say("KEYS: ", cjson.encode(wd:keys()))
#             ';
#        }


		location /show_dict {
			content_by_lua_file NGX_BASE_SRC_DIR/lua_file/show_dict.lua;
		}


    }

	server {
		listen 8000;
	
#		location /redis_get {
#			internal;
#			set_unescape_uri $key $arg_key;
#			redis2_query get $key;
#			redis2_pass redis_server;
#		}
#
#		location /redis_hgetall {
#			internal;
#			set_unescape_uri $key $arg_key;
#			redis2_query hgetall $key;
#			redis2_pass redis_server;
#		}
#
#		location /redis_rpoplpush {
#			internal;
#			set_unescape_uri $key $arg_key;
#			redis2_raw_query "rpoplpush $key $key\r\n";
#			redis2_pass redis_server;
#		}	
#
#		location /redis_llen {
#			internal;
#			set_unescape_uri $key $arg_key;
#			redis2_query llen $key;
#			redis2_pass redis_server;
#		}
#
#		location /redis_lpush {
#			internal;
#			set_unescape_uri $key $arg_key;
#			set_unescape_uri $value $arg_value;
#			redis2_raw_query "lpush $key $value\r\n";
#			redis2_pass redis_server;
#		}
#
#
#		location /redis_rpop {
#			internal;
#			set_unescape_uri $key $arg_key;
#			redis2_query rpop $key;
#			redis2_pass redis_server;
#		}
#
#		location /redis_lrange {
#			internal;
#			set_unescape_uri $key $arg_key;
#			set_unescape_uri $i $arg_i;
#			set_unescape_uri $j $arg_j;
#			redis2_raw_query "lrange $key $i $j\r\n";
#			redis2_pass redis_server;
#		}
#		
#		location /dump_route_redis {
#			content_by_lua_file /opt/lua_file/dump_route_redis.lua;
#		}

			
		location / {
			set $target '';
			set $instance_digest '';
			set $enable_persist '1';
            set $enable_debug '0';
			access_by_lua_file NGX_BASE_SRC_DIR/lua_file/access_phase_dict.lua;
			proxy_pass http://$target;
			header_filter_by_lua_file NGX_BASE_SRC_DIR/lua_file/output_header_filter.lua; 
		}


	}
}
