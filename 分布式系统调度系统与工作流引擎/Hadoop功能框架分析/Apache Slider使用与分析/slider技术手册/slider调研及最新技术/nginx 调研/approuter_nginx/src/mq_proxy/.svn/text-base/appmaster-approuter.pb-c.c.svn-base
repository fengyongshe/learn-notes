/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#include "appmaster-approuter.pb-c.h"
void   app_router_join__init
                     (AppRouterJoin         *message)
{
  static AppRouterJoin init_value = APP_ROUTER_JOIN__INIT;
  *message = init_value;
}
size_t app_router_join__get_packed_size
                     (const AppRouterJoin *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_join__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t app_router_join__pack
                     (const AppRouterJoin *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_join__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t app_router_join__pack_to_buffer
                     (const AppRouterJoin *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_join__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
AppRouterJoin *
       app_router_join__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (AppRouterJoin *)
     protobuf_c_message_unpack (&app_router_join__descriptor,
                                allocator, len, data);
}
void   app_router_join__free_unpacked
                     (AppRouterJoin *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_join__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   app_router_join_response__init
                     (AppRouterJoinResponse         *message)
{
  static AppRouterJoinResponse init_value = APP_ROUTER_JOIN_RESPONSE__INIT;
  *message = init_value;
}
size_t app_router_join_response__get_packed_size
                     (const AppRouterJoinResponse *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_join_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t app_router_join_response__pack
                     (const AppRouterJoinResponse *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_join_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t app_router_join_response__pack_to_buffer
                     (const AppRouterJoinResponse *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_join_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
AppRouterJoinResponse *
       app_router_join_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (AppRouterJoinResponse *)
     protobuf_c_message_unpack (&app_router_join_response__descriptor,
                                allocator, len, data);
}
void   app_router_join_response__free_unpacked
                     (AppRouterJoinResponse *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_join_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   app_router_quit__init
                     (AppRouterQuit         *message)
{
  static AppRouterQuit init_value = APP_ROUTER_QUIT__INIT;
  *message = init_value;
}
size_t app_router_quit__get_packed_size
                     (const AppRouterQuit *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_quit__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t app_router_quit__pack
                     (const AppRouterQuit *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_quit__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t app_router_quit__pack_to_buffer
                     (const AppRouterQuit *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_quit__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
AppRouterQuit *
       app_router_quit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (AppRouterQuit *)
     protobuf_c_message_unpack (&app_router_quit__descriptor,
                                allocator, len, data);
}
void   app_router_quit__free_unpacked
                     (AppRouterQuit *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_quit__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   app_router_quit_response__init
                     (AppRouterQuitResponse         *message)
{
  static AppRouterQuitResponse init_value = APP_ROUTER_QUIT_RESPONSE__INIT;
  *message = init_value;
}
size_t app_router_quit_response__get_packed_size
                     (const AppRouterQuitResponse *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_quit_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t app_router_quit_response__pack
                     (const AppRouterQuitResponse *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_quit_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t app_router_quit_response__pack_to_buffer
                     (const AppRouterQuitResponse *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_quit_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
AppRouterQuitResponse *
       app_router_quit_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (AppRouterQuitResponse *)
     protobuf_c_message_unpack (&app_router_quit_response__descriptor,
                                allocator, len, data);
}
void   app_router_quit_response__free_unpacked
                     (AppRouterQuitResponse *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_quit_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   app_router_heart_beat__init
                     (AppRouterHeartBeat         *message)
{
  static AppRouterHeartBeat init_value = APP_ROUTER_HEART_BEAT__INIT;
  *message = init_value;
}
size_t app_router_heart_beat__get_packed_size
                     (const AppRouterHeartBeat *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_heart_beat__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t app_router_heart_beat__pack
                     (const AppRouterHeartBeat *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_heart_beat__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t app_router_heart_beat__pack_to_buffer
                     (const AppRouterHeartBeat *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_heart_beat__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
AppRouterHeartBeat *
       app_router_heart_beat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (AppRouterHeartBeat *)
     protobuf_c_message_unpack (&app_router_heart_beat__descriptor,
                                allocator, len, data);
}
void   app_router_heart_beat__free_unpacked
                     (AppRouterHeartBeat *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_heart_beat__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   app_router_map_command__init
                     (AppRouterMapCommand         *message)
{
  static AppRouterMapCommand init_value = APP_ROUTER_MAP_COMMAND__INIT;
  *message = init_value;
}
size_t app_router_map_command__get_packed_size
                     (const AppRouterMapCommand *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_command__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t app_router_map_command__pack
                     (const AppRouterMapCommand *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_command__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t app_router_map_command__pack_to_buffer
                     (const AppRouterMapCommand *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_command__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
AppRouterMapCommand *
       app_router_map_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (AppRouterMapCommand *)
     protobuf_c_message_unpack (&app_router_map_command__descriptor,
                                allocator, len, data);
}
void   app_router_map_command__free_unpacked
                     (AppRouterMapCommand *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_command__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   app_router_map_command_response__init
                     (AppRouterMapCommandResponse         *message)
{
  static AppRouterMapCommandResponse init_value = APP_ROUTER_MAP_COMMAND_RESPONSE__INIT;
  *message = init_value;
}
size_t app_router_map_command_response__get_packed_size
                     (const AppRouterMapCommandResponse *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_command_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t app_router_map_command_response__pack
                     (const AppRouterMapCommandResponse *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_command_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t app_router_map_command_response__pack_to_buffer
                     (const AppRouterMapCommandResponse *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_command_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
AppRouterMapCommandResponse *
       app_router_map_command_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (AppRouterMapCommandResponse *)
     protobuf_c_message_unpack (&app_router_map_command_response__descriptor,
                                allocator, len, data);
}
void   app_router_map_command_response__free_unpacked
                     (AppRouterMapCommandResponse *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_command_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   app_router_map_refresh__init
                     (AppRouterMapRefresh         *message)
{
  static AppRouterMapRefresh init_value = APP_ROUTER_MAP_REFRESH__INIT;
  *message = init_value;
}
size_t app_router_map_refresh__get_packed_size
                     (const AppRouterMapRefresh *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_refresh__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t app_router_map_refresh__pack
                     (const AppRouterMapRefresh *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_refresh__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t app_router_map_refresh__pack_to_buffer
                     (const AppRouterMapRefresh *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_refresh__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
AppRouterMapRefresh *
       app_router_map_refresh__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (AppRouterMapRefresh *)
     protobuf_c_message_unpack (&app_router_map_refresh__descriptor,
                                allocator, len, data);
}
void   app_router_map_refresh__free_unpacked
                     (AppRouterMapRefresh *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_refresh__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   app_router_map_refresh_response__init
                     (AppRouterMapRefreshResponse         *message)
{
  static AppRouterMapRefreshResponse init_value = APP_ROUTER_MAP_REFRESH_RESPONSE__INIT;
  *message = init_value;
}
size_t app_router_map_refresh_response__get_packed_size
                     (const AppRouterMapRefreshResponse *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_refresh_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t app_router_map_refresh_response__pack
                     (const AppRouterMapRefreshResponse *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_refresh_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t app_router_map_refresh_response__pack_to_buffer
                     (const AppRouterMapRefreshResponse *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_refresh_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
AppRouterMapRefreshResponse *
       app_router_map_refresh_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (AppRouterMapRefreshResponse *)
     protobuf_c_message_unpack (&app_router_map_refresh_response__descriptor,
                                allocator, len, data);
}
void   app_router_map_refresh_response__free_unpacked
                     (AppRouterMapRefreshResponse *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map_refresh_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   update_app_router_configuration__init
                     (UpdateAppRouterConfiguration         *message)
{
  static UpdateAppRouterConfiguration init_value = UPDATE_APP_ROUTER_CONFIGURATION__INIT;
  *message = init_value;
}
size_t update_app_router_configuration__get_packed_size
                     (const UpdateAppRouterConfiguration *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &update_app_router_configuration__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t update_app_router_configuration__pack
                     (const UpdateAppRouterConfiguration *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &update_app_router_configuration__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t update_app_router_configuration__pack_to_buffer
                     (const UpdateAppRouterConfiguration *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &update_app_router_configuration__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
UpdateAppRouterConfiguration *
       update_app_router_configuration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (UpdateAppRouterConfiguration *)
     protobuf_c_message_unpack (&update_app_router_configuration__descriptor,
                                allocator, len, data);
}
void   update_app_router_configuration__free_unpacked
                     (UpdateAppRouterConfiguration *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &update_app_router_configuration__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   update_app_router_configuration_response__init
                     (UpdateAppRouterConfigurationResponse         *message)
{
  static UpdateAppRouterConfigurationResponse init_value = UPDATE_APP_ROUTER_CONFIGURATION_RESPONSE__INIT;
  *message = init_value;
}
size_t update_app_router_configuration_response__get_packed_size
                     (const UpdateAppRouterConfigurationResponse *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &update_app_router_configuration_response__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t update_app_router_configuration_response__pack
                     (const UpdateAppRouterConfigurationResponse *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &update_app_router_configuration_response__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t update_app_router_configuration_response__pack_to_buffer
                     (const UpdateAppRouterConfigurationResponse *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &update_app_router_configuration_response__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
UpdateAppRouterConfigurationResponse *
       update_app_router_configuration_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (UpdateAppRouterConfigurationResponse *)
     protobuf_c_message_unpack (&update_app_router_configuration_response__descriptor,
                                allocator, len, data);
}
void   update_app_router_configuration_response__free_unpacked
                     (UpdateAppRouterConfigurationResponse *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &update_app_router_configuration_response__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   app_router_map__init
                     (AppRouterMap         *message)
{
  static AppRouterMap init_value = APP_ROUTER_MAP__INIT;
  *message = init_value;
}
size_t app_router_map__get_packed_size
                     (const AppRouterMap *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t app_router_map__pack
                     (const AppRouterMap *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t app_router_map__pack_to_buffer
                     (const AppRouterMap *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
AppRouterMap *
       app_router_map__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (AppRouterMap *)
     protobuf_c_message_unpack (&app_router_map__descriptor,
                                allocator, len, data);
}
void   app_router_map__free_unpacked
                     (AppRouterMap *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &app_router_map__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   router_map__init
                     (RouterMap         *message)
{
  static RouterMap init_value = ROUTER_MAP__INIT;
  *message = init_value;
}
size_t router_map__get_packed_size
                     (const RouterMap *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &router_map__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t router_map__pack
                     (const RouterMap *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &router_map__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t router_map__pack_to_buffer
                     (const RouterMap *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &router_map__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
RouterMap *
       router_map__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (RouterMap *)
     protobuf_c_message_unpack (&router_map__descriptor,
                                allocator, len, data);
}
void   router_map__free_unpacked
                     (RouterMap *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &router_map__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
void   router_map_command__init
                     (RouterMapCommand         *message)
{
  static RouterMapCommand init_value = ROUTER_MAP_COMMAND__INIT;
  *message = init_value;
}
size_t router_map_command__get_packed_size
                     (const RouterMapCommand *message)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &router_map_command__descriptor);
  return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
}
size_t router_map_command__pack
                     (const RouterMapCommand *message,
                      uint8_t       *out)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &router_map_command__descriptor);
  return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
}
size_t router_map_command__pack_to_buffer
                     (const RouterMapCommand *message,
                      ProtobufCBuffer *buffer)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &router_map_command__descriptor);
  return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
}
RouterMapCommand *
       router_map_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data)
{
  return (RouterMapCommand *)
     protobuf_c_message_unpack (&router_map_command__descriptor,
                                allocator, len, data);
}
void   router_map_command__free_unpacked
                     (RouterMapCommand *message,
                      ProtobufCAllocator *allocator)
{
  PROTOBUF_C_ASSERT (message->base.descriptor == &router_map_command__descriptor);
  protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
}
static const ProtobufCFieldDescriptor app_router_join__field_descriptors[3] =
{
  {
    "request_id",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterJoin, request_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "app_router_id",
    2,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterJoin, app_router_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "session_id",
    3,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterJoin, session_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned app_router_join__field_indices_by_name[] = {
  1,   /* field[1] = app_router_id */
  0,   /* field[0] = request_id */
  2,   /* field[2] = session_id */
};
static const ProtobufCIntRange app_router_join__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor app_router_join__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "AppRouterJoin",
  "AppRouterJoin",
  "AppRouterJoin",
  "",
  sizeof(AppRouterJoin),
  3,
  app_router_join__field_descriptors,
  app_router_join__field_indices_by_name,
  1,  app_router_join__number_ranges,
  (ProtobufCMessageInit) app_router_join__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor app_router_join_response__field_descriptors[5] =
{
  {
    "action_result",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_MESSAGE,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterJoinResponse, action_result),
    &cm__omae__base__action_result__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "request_id",
    2,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterJoinResponse, request_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "session_id",
    3,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterJoinResponse, session_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "app_router_map",
    4,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    PROTOBUF_C_OFFSETOF(AppRouterJoinResponse, n_app_router_map),
    PROTOBUF_C_OFFSETOF(AppRouterJoinResponse, app_router_map),
    &app_router_map__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "configuration",
    5,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    PROTOBUF_C_OFFSETOF(AppRouterJoinResponse, n_configuration),
    PROTOBUF_C_OFFSETOF(AppRouterJoinResponse, configuration),
    &cm__omae__base__configuration__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned app_router_join_response__field_indices_by_name[] = {
  0,   /* field[0] = action_result */
  3,   /* field[3] = app_router_map */
  4,   /* field[4] = configuration */
  1,   /* field[1] = request_id */
  2,   /* field[2] = session_id */
};
static const ProtobufCIntRange app_router_join_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 5 }
};
const ProtobufCMessageDescriptor app_router_join_response__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "AppRouterJoinResponse",
  "AppRouterJoinResponse",
  "AppRouterJoinResponse",
  "",
  sizeof(AppRouterJoinResponse),
  5,
  app_router_join_response__field_descriptors,
  app_router_join_response__field_indices_by_name,
  1,  app_router_join_response__number_ranges,
  (ProtobufCMessageInit) app_router_join_response__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor app_router_quit__field_descriptors[3] =
{
  {
    "request_id",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterQuit, request_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "app_router_id",
    2,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterQuit, app_router_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "session_id",
    3,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterQuit, session_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned app_router_quit__field_indices_by_name[] = {
  1,   /* field[1] = app_router_id */
  0,   /* field[0] = request_id */
  2,   /* field[2] = session_id */
};
static const ProtobufCIntRange app_router_quit__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor app_router_quit__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "AppRouterQuit",
  "AppRouterQuit",
  "AppRouterQuit",
  "",
  sizeof(AppRouterQuit),
  3,
  app_router_quit__field_descriptors,
  app_router_quit__field_indices_by_name,
  1,  app_router_quit__number_ranges,
  (ProtobufCMessageInit) app_router_quit__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor app_router_quit_response__field_descriptors[3] =
{
  {
    "action_result",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_MESSAGE,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterQuitResponse, action_result),
    &cm__omae__base__action_result__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "request_id",
    2,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterQuitResponse, request_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "session_id",
    3,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterQuitResponse, session_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned app_router_quit_response__field_indices_by_name[] = {
  0,   /* field[0] = action_result */
  1,   /* field[1] = request_id */
  2,   /* field[2] = session_id */
};
static const ProtobufCIntRange app_router_quit_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor app_router_quit_response__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "AppRouterQuitResponse",
  "AppRouterQuitResponse",
  "AppRouterQuitResponse",
  "",
  sizeof(AppRouterQuitResponse),
  3,
  app_router_quit_response__field_descriptors,
  app_router_quit_response__field_indices_by_name,
  1,  app_router_quit_response__number_ranges,
  (ProtobufCMessageInit) app_router_quit_response__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor app_router_heart_beat__field_descriptors[3] =
{
  {
    "app_router_id",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterHeartBeat, app_router_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "session_id",
    2,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterHeartBeat, session_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "timestamp",
    3,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_UINT64,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterHeartBeat, timestamp),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned app_router_heart_beat__field_indices_by_name[] = {
  0,   /* field[0] = app_router_id */
  1,   /* field[1] = session_id */
  2,   /* field[2] = timestamp */
};
static const ProtobufCIntRange app_router_heart_beat__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor app_router_heart_beat__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "AppRouterHeartBeat",
  "AppRouterHeartBeat",
  "AppRouterHeartBeat",
  "",
  sizeof(AppRouterHeartBeat),
  3,
  app_router_heart_beat__field_descriptors,
  app_router_heart_beat__field_indices_by_name,
  1,  app_router_heart_beat__number_ranges,
  (ProtobufCMessageInit) app_router_heart_beat__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor app_router_map_command__field_descriptors[3] =
{
  {
    "request_id",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMapCommand, request_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "appInfo",
    2,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_MESSAGE,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMapCommand, appinfo),
    &cm__omae__base__app_info__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "router_map_command",
    3,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    PROTOBUF_C_OFFSETOF(AppRouterMapCommand, n_router_map_command),
    PROTOBUF_C_OFFSETOF(AppRouterMapCommand, router_map_command),
    &router_map_command__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned app_router_map_command__field_indices_by_name[] = {
  1,   /* field[1] = appInfo */
  0,   /* field[0] = request_id */
  2,   /* field[2] = router_map_command */
};
static const ProtobufCIntRange app_router_map_command__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 3 }
};
const ProtobufCMessageDescriptor app_router_map_command__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "AppRouterMapCommand",
  "AppRouterMapCommand",
  "AppRouterMapCommand",
  "",
  sizeof(AppRouterMapCommand),
  3,
  app_router_map_command__field_descriptors,
  app_router_map_command__field_indices_by_name,
  1,  app_router_map_command__number_ranges,
  (ProtobufCMessageInit) app_router_map_command__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor app_router_map_command_response__field_descriptors[4] =
{
  {
    "action_result",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_MESSAGE,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMapCommandResponse, action_result),
    &cm__omae__base__action_result__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "request_id",
    2,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMapCommandResponse, request_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "app_router_id",
    3,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMapCommandResponse, app_router_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "session_id",
    4,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMapCommandResponse, session_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned app_router_map_command_response__field_indices_by_name[] = {
  0,   /* field[0] = action_result */
  2,   /* field[2] = app_router_id */
  1,   /* field[1] = request_id */
  3,   /* field[3] = session_id */
};
static const ProtobufCIntRange app_router_map_command_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 4 }
};
const ProtobufCMessageDescriptor app_router_map_command_response__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "AppRouterMapCommandResponse",
  "AppRouterMapCommandResponse",
  "AppRouterMapCommandResponse",
  "",
  sizeof(AppRouterMapCommandResponse),
  4,
  app_router_map_command_response__field_descriptors,
  app_router_map_command_response__field_indices_by_name,
  1,  app_router_map_command_response__number_ranges,
  (ProtobufCMessageInit) app_router_map_command_response__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor app_router_map_refresh__field_descriptors[2] =
{
  {
    "request_id",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMapRefresh, request_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "app_router_map",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    PROTOBUF_C_OFFSETOF(AppRouterMapRefresh, n_app_router_map),
    PROTOBUF_C_OFFSETOF(AppRouterMapRefresh, app_router_map),
    &app_router_map__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned app_router_map_refresh__field_indices_by_name[] = {
  1,   /* field[1] = app_router_map */
  0,   /* field[0] = request_id */
};
static const ProtobufCIntRange app_router_map_refresh__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor app_router_map_refresh__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "AppRouterMapRefresh",
  "AppRouterMapRefresh",
  "AppRouterMapRefresh",
  "",
  sizeof(AppRouterMapRefresh),
  2,
  app_router_map_refresh__field_descriptors,
  app_router_map_refresh__field_indices_by_name,
  1,  app_router_map_refresh__number_ranges,
  (ProtobufCMessageInit) app_router_map_refresh__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor app_router_map_refresh_response__field_descriptors[4] =
{
  {
    "action_result",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_MESSAGE,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMapRefreshResponse, action_result),
    &cm__omae__base__action_result__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "request_id",
    2,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMapRefreshResponse, request_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "app_router_id",
    3,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMapRefreshResponse, app_router_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "session_id",
    4,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMapRefreshResponse, session_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned app_router_map_refresh_response__field_indices_by_name[] = {
  0,   /* field[0] = action_result */
  2,   /* field[2] = app_router_id */
  1,   /* field[1] = request_id */
  3,   /* field[3] = session_id */
};
static const ProtobufCIntRange app_router_map_refresh_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 4 }
};
const ProtobufCMessageDescriptor app_router_map_refresh_response__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "AppRouterMapRefreshResponse",
  "AppRouterMapRefreshResponse",
  "AppRouterMapRefreshResponse",
  "",
  sizeof(AppRouterMapRefreshResponse),
  4,
  app_router_map_refresh_response__field_descriptors,
  app_router_map_refresh_response__field_indices_by_name,
  1,  app_router_map_refresh_response__number_ranges,
  (ProtobufCMessageInit) app_router_map_refresh_response__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor update_app_router_configuration__field_descriptors[2] =
{
  {
    "request_id",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(UpdateAppRouterConfiguration, request_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "configuration",
    2,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_MESSAGE,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(UpdateAppRouterConfiguration, configuration),
    &cm__omae__base__configuration__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned update_app_router_configuration__field_indices_by_name[] = {
  1,   /* field[1] = configuration */
  0,   /* field[0] = request_id */
};
static const ProtobufCIntRange update_app_router_configuration__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor update_app_router_configuration__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "UpdateAppRouterConfiguration",
  "UpdateAppRouterConfiguration",
  "UpdateAppRouterConfiguration",
  "",
  sizeof(UpdateAppRouterConfiguration),
  2,
  update_app_router_configuration__field_descriptors,
  update_app_router_configuration__field_indices_by_name,
  1,  update_app_router_configuration__number_ranges,
  (ProtobufCMessageInit) update_app_router_configuration__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor update_app_router_configuration_response__field_descriptors[4] =
{
  {
    "action_result",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_MESSAGE,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(UpdateAppRouterConfigurationResponse, action_result),
    &cm__omae__base__action_result__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "request_id",
    2,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(UpdateAppRouterConfigurationResponse, request_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "app_router_id",
    3,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(UpdateAppRouterConfigurationResponse, app_router_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "session_id",
    4,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_STRING,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(UpdateAppRouterConfigurationResponse, session_id),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned update_app_router_configuration_response__field_indices_by_name[] = {
  0,   /* field[0] = action_result */
  2,   /* field[2] = app_router_id */
  1,   /* field[1] = request_id */
  3,   /* field[3] = session_id */
};
static const ProtobufCIntRange update_app_router_configuration_response__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 4 }
};
const ProtobufCMessageDescriptor update_app_router_configuration_response__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "UpdateAppRouterConfigurationResponse",
  "UpdateAppRouterConfigurationResponse",
  "UpdateAppRouterConfigurationResponse",
  "",
  sizeof(UpdateAppRouterConfigurationResponse),
  4,
  update_app_router_configuration_response__field_descriptors,
  update_app_router_configuration_response__field_indices_by_name,
  1,  update_app_router_configuration_response__number_ranges,
  (ProtobufCMessageInit) update_app_router_configuration_response__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor app_router_map__field_descriptors[2] =
{
  {
    "app_info",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_MESSAGE,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(AppRouterMap, app_info),
    &cm__omae__base__app_info__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "router_map",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_MESSAGE,
    PROTOBUF_C_OFFSETOF(AppRouterMap, n_router_map),
    PROTOBUF_C_OFFSETOF(AppRouterMap, router_map),
    &router_map__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned app_router_map__field_indices_by_name[] = {
  0,   /* field[0] = app_info */
  1,   /* field[1] = router_map */
};
static const ProtobufCIntRange app_router_map__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor app_router_map__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "AppRouterMap",
  "AppRouterMap",
  "AppRouterMap",
  "",
  sizeof(AppRouterMap),
  2,
  app_router_map__field_descriptors,
  app_router_map__field_indices_by_name,
  1,  app_router_map__number_ranges,
  (ProtobufCMessageInit) app_router_map__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor router_map__field_descriptors[2] =
{
  {
    "domain_name",
    1,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_STRING,
    PROTOBUF_C_OFFSETOF(RouterMap, n_domain_name),
    PROTOBUF_C_OFFSETOF(RouterMap, domain_name),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "destination",
    2,
    PROTOBUF_C_LABEL_REPEATED,
    PROTOBUF_C_TYPE_STRING,
    PROTOBUF_C_OFFSETOF(RouterMap, n_destination),
    PROTOBUF_C_OFFSETOF(RouterMap, destination),
    NULL,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned router_map__field_indices_by_name[] = {
  1,   /* field[1] = destination */
  0,   /* field[0] = domain_name */
};
static const ProtobufCIntRange router_map__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor router_map__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "RouterMap",
  "RouterMap",
  "RouterMap",
  "",
  sizeof(RouterMap),
  2,
  router_map__field_descriptors,
  router_map__field_indices_by_name,
  1,  router_map__number_ranges,
  (ProtobufCMessageInit) router_map__init,
  NULL,NULL,NULL    /* reserved[123] */
};
static const ProtobufCFieldDescriptor router_map_command__field_descriptors[2] =
{
  {
    "operation",
    1,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_ENUM,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(RouterMapCommand, operation),
    &router_map_operation__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
  {
    "router_map",
    2,
    PROTOBUF_C_LABEL_REQUIRED,
    PROTOBUF_C_TYPE_MESSAGE,
    0,   /* quantifier_offset */
    PROTOBUF_C_OFFSETOF(RouterMapCommand, router_map),
    &router_map__descriptor,
    NULL,
    NULL,NULL    /* reserved1, reserved2 */
  },
};
static const unsigned router_map_command__field_indices_by_name[] = {
  0,   /* field[0] = operation */
  1,   /* field[1] = router_map */
};
static const ProtobufCIntRange router_map_command__number_ranges[1 + 1] =
{
  { 1, 0 },
  { 0, 2 }
};
const ProtobufCMessageDescriptor router_map_command__descriptor =
{
  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
  "RouterMapCommand",
  "RouterMapCommand",
  "RouterMapCommand",
  "",
  sizeof(RouterMapCommand),
  2,
  router_map_command__field_descriptors,
  router_map_command__field_indices_by_name,
  1,  router_map_command__number_ranges,
  (ProtobufCMessageInit) router_map_command__init,
  NULL,NULL,NULL    /* reserved[123] */
};
const ProtobufCEnumValue router_map_operation__enum_values_by_number[2] =
{
  { "ADD", "ROUTER_MAP_OPERATION__ADD", 1 },
  { "DELETE", "ROUTER_MAP_OPERATION__DELETE", 2 },
};
static const ProtobufCIntRange router_map_operation__value_ranges[] = {
{1, 0},{0, 2}
};
const ProtobufCEnumValueIndex router_map_operation__enum_values_by_name[2] =
{
  { "ADD", 0 },
  { "DELETE", 1 },
};
const ProtobufCEnumDescriptor router_map_operation__descriptor =
{
  PROTOBUF_C_ENUM_DESCRIPTOR_MAGIC,
  "RouterMapOperation",
  "RouterMapOperation",
  "RouterMapOperation",
  "",
  2,
  router_map_operation__enum_values_by_number,
  2,
  router_map_operation__enum_values_by_name,
  1,
  router_map_operation__value_ranges,
  NULL,NULL,NULL,NULL   /* reserved[1234] */
};
